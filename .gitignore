.vscode
.ansible
**/ansible/collections/*
.DS_Store
.op
.op/*
.venv
.venv/*
.dont_commit
.dont_commit/**
.dont_commit/*
.pem
.env
.python-version
venv
venv/*
__pycache__
__pycache__/**
__pychace__/*
__test__*.py
# Local .terraform directories
**/.terraform/*
**/.terraformignore
**/.terraform.lock.hcl
.terraform.locl.hcl
# .tfstate files
*.tfstate
*.tfstate.*

terraform.zip

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version
# control as they are data points which are potentially sensitive and subject
# to change depending on the environment.
# *.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc
